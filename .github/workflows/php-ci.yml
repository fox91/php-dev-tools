name: php-ci

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist"
  COMPOSER_UPDATE_FLAGS: ""

defaults:
  run:
    working-directory: ./

jobs:
  tests:
    name: "Dev Tools (PHP ${{ matrix.php-version }}, ${{ matrix.dependencies }})"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
        dependencies:
          - "lowest"
          - "highest"
        os:
          - "ubuntu-latest"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@2.25.5
        with:
          coverage: none
          ini-values: memory_limit=-1
          php-version: ${{ matrix.php-version }}
          tools: composer
      -
        name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      -
        name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      -
        name: Handle lowest dependencies update
        if: "contains(matrix.dependencies, 'lowest')"
        run: echo "COMPOSER_UPDATE_FLAGS=$COMPOSER_UPDATE_FLAGS --prefer-lowest" >> $GITHUB_ENV
      -
        name: Remove platform config to get latest dependencies for current PHP version when build is not locked
        run: composer config platform --unset
      -
        name: Update dependencies from composer.json
        if: "contains(matrix.dependencies, 'highest') || contains(matrix.dependencies, 'lowest')"
        run: composer update ${{ env.COMPOSER_UPDATE_FLAGS }} ${{ env.COMPOSER_FLAGS }}
      -
        name: Validate composer.json
        run: composer validate --strict
      -
        name: Validate composer.json with dependencies
        run: composer validate --strict --with-dependencies
        continue-on-error: true
      -
        name: PHP lint
        run: composer lint:test
      -
        name: PHP codesniffer
        run: composer cs:test
